{"version":3,"sources":["helpers/createRank.js","helpers/reorderData.js","reducers/index.js","helpers/makeData.js","components/RankTable.js","components/MainContent.js","components/ExportButton.js","App.js","hooks/useApplicationData.js","reportWebVitals.js","index.js"],"names":["createRank","data","breedArray","rank1","rank2","Object","keys","forEach","breed","length","detail","push","i","randomNum1","Math","floor","random","splice","randomNum2","reorderData","state","startIndex","startColumn","endIndex","endColumn","temp","breed1Rank","breed2Rank","breed1Total","breed2Total","initialState","SET_INITIAL_RANK","DRAG_AND_DROP","setInitialRank","type","payload","makeData","values","map","rank","RankTable","columns","table","useTable","getTableProps","headerGroups","prepareRow","rows","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","droppableId","Header","provided","snapshot","ref","innerRef","droppableProps","row","draggableId","original","index","getRowProps","draggableProps","dragHandleProps","cells","cell","getCellProps","placeholder","Styles","styled","div","MainContent","dispatch","useDispatch","columnsOne","useMemo","accessor","columnsTwo","useState","dataOne","setDataOne","dataTwo","setDataTwo","onDragEnd","result","source","destination","alert","Button","button","ExportButton","onClick","dataStr","encodeURIComponent","JSON","stringify","link","document","createElement","href","download","click","x","window","open","write","close","Container","HeaderContainer","App","setData","loading","setLoading","error","setError","useEffect","fetchAPI","a","axios","get","response","message","useApplicationData","useSelector","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","action","newState","ReactDOM","StrictMode","getElementById"],"mappings":"0QACe,SAASA,EAAWC,GACjC,IAAMC,EAAa,GACbC,EAAQ,GACRC,EAAQ,GAEdC,OAAOC,KAAKL,GAAMM,SAAQ,SAAAC,GACG,IAAvBP,EAAKO,GAAOC,OACdR,EAAKO,GAAOD,SAAQ,SAAAG,GAClBR,EAAWS,KAAX,UAAmBH,EAAnB,YAA4BE,OAG9BR,EAAWS,KAAKH,MAIpB,IAAK,IAAII,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC5B,IAAMC,EAAaC,KAAKC,MAAMD,KAAKE,SAAWd,EAAWO,QACzDN,EAAM,OAAD,OAAQS,IAAOV,EAAWW,GAC/BX,EAAWe,OAAOJ,EAAY,GAC9B,IAAMK,EAAaJ,KAAKC,MAAMD,KAAKE,SAAWd,EAAWO,QACzDL,EAAM,OAAD,OAAQQ,IAAOV,EAAWgB,GAC/BhB,EAAWe,OAAOC,EAAY,GAGhC,MAAO,CACLf,QACAC,SC3BW,SAASe,EAAYC,EAAOC,EAAYC,EAAaC,EAAUC,GAE5E,GAAIF,IAAgBE,GAClB,GAAoB,YAAhBF,GACF,GAAID,EAAaE,EAAU,CAEzB,IADA,IAAME,EAAOL,EAAMM,WAAN,cAAwBL,EAAa,IACzCT,EAAIS,EAAa,EAAGT,EAAIW,EAAW,EAAGX,IAC7CQ,EAAMM,WAAN,cAAwBd,IAAOQ,EAAMM,WAAN,cAAwBd,EAAI,IAE7DQ,EAAMM,WAAN,cAAwBH,EAAW,IAAOE,OACrC,GAAIJ,EAAaE,EAAU,CAEhC,IADA,IAAME,EAAOL,EAAMM,WAAN,cAAwBL,EAAa,IACzCT,EAAIS,EAAa,EAAGT,EAAIW,EAAW,EAAGX,IAC7CQ,EAAMM,WAAN,cAAwBd,IAAOQ,EAAMM,WAAN,cAAwBd,EAAI,IAE7DQ,EAAMM,WAAN,cAAwBH,EAAW,IAAOE,QAGvC,GAAoB,YAAhBH,EACT,GAAID,EAAaE,EAAU,CAEzB,IADA,IAAME,EAAOL,EAAMO,WAAN,cAAwBN,EAAa,IACzCT,EAAIS,EAAa,EAAGT,EAAIW,EAAW,EAAGX,IAC7CQ,EAAMO,WAAN,cAAwBf,IAAOQ,EAAMO,WAAN,cAAwBf,EAAI,IAE7DQ,EAAMO,WAAN,cAAwBJ,EAAW,IAAOE,OACrC,GAAIJ,EAAaE,EAAU,CAEhC,IADA,IAAME,EAAOL,EAAMO,WAAN,cAAwBN,EAAa,IACzCT,EAAIS,EAAa,EAAGT,EAAIW,EAAW,EAAGX,IAC7CQ,EAAMO,WAAN,cAAwBf,IAAOQ,EAAMO,WAAN,cAAwBf,EAAI,IAE7DQ,EAAMO,WAAN,cAAwBJ,EAAW,IAAOE,QAK9C,GAAoB,YAAhBH,EAA2B,CAC7BF,EAAMQ,cAGN,IAFA,IAAMH,EAAOL,EAAMM,WAAN,cAAwBL,EAAa,IAEzCT,EAAIS,EAAa,EAAGT,GAAKQ,EAAMQ,YAAahB,IACnDQ,EAAMM,WAAN,cAAwBd,IAAOQ,EAAMM,WAAN,cAAwBd,EAAI,WAGtDQ,EAAMM,WAAN,cAAwBN,EAAMQ,YAAc,IAEnDR,EAAMS,cAEN,IAAK,IAAIjB,EAAIQ,EAAMS,YAAajB,EAAIW,EAAW,EAAGX,IAChDQ,EAAMO,WAAN,cAAwBf,IAAOQ,EAAMO,WAAN,cAAwBf,EAAI,IAG7DQ,EAAMO,WAAN,cAAwBJ,EAAW,IAAOE,OAErC,GAAoB,YAAhBH,EAA2B,CACpCF,EAAMS,cAGN,IAFA,IAAMJ,EAAOL,EAAMO,WAAN,cAAwBN,EAAa,IAEzCT,EAAIS,EAAa,EAAGT,GAAKQ,EAAMS,YAAajB,IACnDQ,EAAMO,WAAN,cAAwBf,IAAOQ,EAAMO,WAAN,cAAwBf,EAAI,WAGtDQ,EAAMO,WAAN,cAAwBP,EAAMS,YAAc,IAEnDT,EAAMQ,cAEN,IAAK,IAAIhB,EAAIQ,EAAMQ,YAAahB,EAAIW,EAAW,EAAGX,IAChDQ,EAAMM,WAAN,cAAwBd,IAAOQ,EAAMM,WAAN,cAAwBd,EAAI,IAG7DQ,EAAMM,WAAN,cAAwBH,EAAW,IAAOE,EAI9C,OAAOL,ECrET,IAAMU,EAAe,CACnBF,YAAa,EACbF,WAAY,GACZG,YAAa,EACbF,WAAY,IAIRI,EAAmB,mBACnBC,EAAgB,gBAGTC,EAAiB,SAAChC,GAAD,MAAW,CAAEiC,KAAMH,EAAkBI,QAASlC,I,qBCf7D,SAASmC,EAASnC,GAC/B,OAAOI,OAAOgC,OAAOpC,GAAMqC,KAAI,SAAC9B,EAAOI,GACrC,MAAO,CACL2B,KAAM3B,EAAI,EACVJ,Y,2BCyDSgC,I,EAAAA,EAzDf,YAAuC,IAAlBC,EAAiB,EAAjBA,QAASxC,EAAQ,EAARA,KAEtByC,EAAQC,mBAAS,CACrBF,UACAxC,SAEM2C,EAAkDF,EAAlDE,cAAeC,EAAmCH,EAAnCG,aAAcC,EAAqBJ,EAArBI,WAAYC,EAASL,EAATK,KAEjD,OACE,mCACE,kDAAWH,KAAX,cACE,gCACGC,EAAaP,KAAI,SAAAU,GAAW,OAC3B,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQZ,KAAI,SAAAa,GAAM,OAC7B,8CAAQA,EAAOC,kBAAf,aAAkCD,EAAOE,OAAO,wBAKxD,cAAC,IAAD,CAAWC,YAAab,EAAQ,GAAGc,OAAnC,SACG,SAACC,EAAUC,GAAX,OACC,gDAAOC,IAAKF,EAASG,UAAcH,EAASI,gBAA5C,cACGb,EAAKT,KAAI,SAACuB,EAAKjD,GAEd,OADAkC,EAAWe,GAET,cAAC,IAAD,CACEC,YAAaD,EAAIE,SAASvD,MAE1BwD,MAAOH,EAAIG,MAHb,SAKG,SAACR,EAAUC,GAAX,OACC,sEACMI,EAAII,eACJT,EAASU,gBACTV,EAASW,iBAHf,IAIET,IAAKF,EAASG,SAJhB,SAMGE,EAAIO,MAAM9B,KAAI,SAAA+B,GAAI,OACjB,8CAAQA,EAAKC,gBAAb,aACGD,EAAKhB,OAAO,mBAZhBQ,EAAIE,SAASvD,UAoBvBgD,EAASe,0BC7ClBC,EAASC,IAAOC,IAAV,+sBAuHGC,I,EAAAA,EAzEf,YAAiC,IAAVvD,EAAS,EAATA,MACfwD,EAAWC,cAEXC,EAAaC,mBAAQ,iBACzB,CACE,CACExB,OAAQ,OACRyB,SAAU,QAEZ,CACEzB,OAAQ,UACRyB,SAAU,aAIVC,EAAaF,mBAAQ,iBACzB,CACE,CACExB,OAAQ,OACRyB,SAAU,QAEZ,CACEzB,OAAQ,UACRyB,SAAU,YAGd,IAEF,EAA8BE,mBAAS9C,EAAShB,EAAMM,aAAtD,mBAAOyD,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS9C,EAAShB,EAAMO,aAAtD,mBAAO0D,EAAP,KAAgBC,EAAhB,KAkCA,OACE,cAACd,EAAD,UACE,eAAC,IAAD,CAAiBe,UAjCC,SAAAC,GACpB,IAAQC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,YAGhB,GAAKA,EAAL,CAIA,IAAMrE,EAAaoE,EAAOzB,MACpB1C,EAAcmE,EAAOnC,YACrB/B,EAAWmE,EAAY1B,MACvBxC,EAAYkE,EAAYpC,YAG9B,GAAoB,YAAhBhC,GAA6BA,IAAgBE,GAC/C,GAA6C,IAAzCnB,OAAOC,KAAKc,EAAMM,YAAYjB,OAEhC,YADAkF,MAAM,iCAGH,GAAoB,YAAhBrE,GAA6BA,IAAgBE,GACT,IAAzCnB,OAAOC,KAAKc,EAAMO,YAAYlB,OAEhC,YADAkF,MAAM,4BAIVf,EH7FmC,CAAE1C,KAAMF,EAAeG,QG6FrC,CAAEd,aAAYC,cAAaC,WAAUC,eAE1D4D,EAAWhD,EAAShB,EAAMM,aAC1B4D,EAAWlD,EAAShB,EAAMO,eAKxB,UACE,cAAC,EAAD,CAAWc,QAASqC,EAAY7E,KAAMkF,IACtC,cAAC,EAAD,CAAW1C,QAASwC,EAAYhF,KAAMoF,UCtHxCO,EAASnB,IAAOoB,OAAV,mFA6BGC,I,MAAAA,EAtBf,YAAkC,IAAV1E,EAAS,EAATA,MAetB,OACE,cAACwE,EAAD,CAAQG,QAdU,WAClB,IAAMC,EAAO,uCAAmCC,mBAAmBC,KAAKC,UAAU,CAAE,UAAa/E,GAAS,KAAM,QAC1GgF,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOP,EACZI,EAAKI,SAAW,aAChBJ,EAAKK,QAEL,IAAMC,EAAIC,OAAOC,OACjBF,EAAEL,SAASO,OACXF,EAAEL,SAASQ,MAAM,oBAAsBX,KAAKC,UAAU,CAAE,UAAa/E,GAAS,KAAM,MAAQ,wBAC5FsF,EAAEL,SAASS,SAIX,sBCfEC,EAAYtC,IAAOC,IAAV,6HAOTsC,EAAkBvC,IAAOC,IAAV,mDAIfnB,EAASkB,IAAOC,IAAV,wFAgCGuC,MA1Bf,WAEE,MCzBa,WACb,MAAwB/B,mBAAS,MAAjC,mBAAOjF,EAAP,KAAaiH,EAAb,KACA,EAA8BhC,oBAAS,GAAvC,mBAAOiC,EAAP,KAAgBC,EAAhB,KACA,EAA0BlC,mBAAS,MAAnC,mBAAOmC,EAAP,KAAcC,EAAd,KAEM1C,EAAWC,cAuBjB,OApBA0C,qBAAU,WACR,IAAMC,EAAQ,uCAAG,4BAAAC,EAAA,sEAEbH,EAAS,MACTJ,EAAQ,MACRE,GAAW,GAJE,SAMUM,IAAMC,IAAI,uCANpB,OAMPC,EANO,OAQbV,EAAQU,EAAS3H,MACjB2E,EAAS3C,EAAe2F,EAAS3H,KAAK4H,UATzB,kDAWbP,EAAS,EAAD,IAXK,QAafF,GAAW,GAbI,0DAAH,qDAgBdI,MACC,IAEI,CACLvH,OACAkH,UACAE,SDN+BS,GAAzB7H,EAAR,EAAQA,KAAMkH,EAAd,EAAcA,QAASE,EAAvB,EAAuBA,MAEjBjG,EAAQ2G,aAAY,SAAA3G,GAAK,MAAK,CAClCQ,YAAaR,EAAMQ,YACnBF,WAAYN,EAAMM,WAClBG,YAAaT,EAAMS,YACnBF,WAAYP,EAAMO,eAGpB,OAAIwF,EAAgB,6CAChBE,EAAc,yCACbpH,EAGH,eAAC8G,EAAD,WACE,eAACC,EAAD,WACE,cAACzD,EAAD,yBACA,cAAC,EAAD,CAAcnC,MAAOA,OAEvB,cAAC,EAAD,CAAaA,MAAOA,OARN,ME7BL4G,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCERQ,EAAQC,aRYC,WAAgD,IAA/BtH,EAA8B,uDAAtBU,EAAc6G,EAAQ,uCAC5D,OAAQA,EAAOzG,MACb,KAAKH,EACH,MAAyB/B,EAAW2I,EAAOxG,SAAnChC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MACf,OAAO,2BACFgB,GADL,IAEEQ,YAAa,GACbF,WAAYvB,EACZ0B,YAAa,GACbF,WAAYvB,IAEhB,KAAK4B,EACH,MAAyD2G,EAAOxG,QAAxDd,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,SAAUC,EAA3C,EAA2CA,UACrCoH,EAAWzH,EAAYC,EAAOC,EAAYC,EAAaC,EAAUC,GACvE,OAAO,2BACFJ,GADL,IAEEQ,YAAagH,EAAShH,YACtBF,WAAYkH,EAASlH,WACrBG,YAAa+G,EAAS/G,YACtBF,WAAYiH,EAASjH,aAEzB,QACE,OAAOP,MQhCbyH,IAASxF,OACP,cAAC,IAAMyF,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJpC,SAAS0C,eAAe,SAM1Bf,M","file":"static/js/main.4ea6b622.chunk.js","sourcesContent":["/* Create 2 breed rank lists by using Math.random() numbers */\r\nexport default function createRank(data) {\r\n  const breedArray = [];\r\n  const rank1 = {};\r\n  const rank2 = {};\r\n\r\n  Object.keys(data).forEach(breed => {\r\n    if (data[breed].length !== 0) {\r\n      data[breed].forEach(detail => {\r\n        breedArray.push(`${breed}-${detail}`);\r\n      })\r\n    } else {\r\n      breedArray.push(breed);\r\n    }\r\n  })\r\n\r\n  for (let i = 1; i <= 10; i++) {\r\n    const randomNum1 = Math.floor(Math.random() * breedArray.length);\r\n    rank1[`rank${i}`] = breedArray[randomNum1];\r\n    breedArray.splice(randomNum1, 1);\r\n    const randomNum2 = Math.floor(Math.random() * breedArray.length);\r\n    rank2[`rank${i}`] = breedArray[randomNum2];\r\n    breedArray.splice(randomNum2, 1);\r\n  }\r\n\r\n  return {\r\n    rank1,\r\n    rank2\r\n  }\r\n}","export default function reorderData(state, startIndex, startColumn, endIndex, endColumn) {\r\n  // when drag and drop occurs in the same column\r\n  if (startColumn === endColumn) {\r\n    if (startColumn === 'Breed 1') { // in case drag and drop occurs in breed 1 table\r\n      if (startIndex > endIndex) {\r\n        const temp = state.breed1Rank[`rank${startIndex + 1}`];\r\n        for (let i = startIndex + 1; i > endIndex + 1; i--) {\r\n          state.breed1Rank[`rank${i}`] = state.breed1Rank[`rank${i - 1}`];\r\n        }\r\n        state.breed1Rank[`rank${endIndex + 1}`] = temp;\r\n      } else if (startIndex < endIndex) {\r\n        const temp = state.breed1Rank[`rank${startIndex + 1}`];\r\n        for (let i = startIndex + 1; i < endIndex + 1; i++) {\r\n          state.breed1Rank[`rank${i}`] = state.breed1Rank[`rank${i + 1}`];\r\n        }\r\n        state.breed1Rank[`rank${endIndex + 1}`] = temp;\r\n      }\r\n\r\n    } else if (startColumn === 'Breed 2') { // in case drag and drop occurs in breed 2 table\r\n      if (startIndex > endIndex) {\r\n        const temp = state.breed2Rank[`rank${startIndex + 1}`];\r\n        for (let i = startIndex + 1; i > endIndex + 1; i--) {\r\n          state.breed2Rank[`rank${i}`] = state.breed2Rank[`rank${i - 1}`];\r\n        }\r\n        state.breed2Rank[`rank${endIndex + 1}`] = temp;\r\n      } else if (startIndex < endIndex) {\r\n        const temp = state.breed2Rank[`rank${startIndex + 1}`];\r\n        for (let i = startIndex + 1; i < endIndex + 1; i++) {\r\n          state.breed2Rank[`rank${i}`] = state.breed2Rank[`rank${i + 1}`];\r\n        }\r\n        state.breed2Rank[`rank${endIndex + 1}`] = temp;\r\n      }\r\n    }\r\n  } else {\r\n    // in case drag from breed 1 table and drop to breed 2 table\r\n    if (startColumn === 'Breed 1') {\r\n      state.breed1Total--;\r\n      const temp = state.breed1Rank[`rank${startIndex + 1}`];\r\n\r\n      for (let i = startIndex + 1; i <= state.breed1Total; i++) {\r\n        state.breed1Rank[`rank${i}`] = state.breed1Rank[`rank${i + 1}`]\r\n      }\r\n\r\n      delete state.breed1Rank[`rank${state.breed1Total + 1}`]\r\n\r\n      state.breed2Total++;\r\n\r\n      for (let i = state.breed2Total; i > endIndex + 1; i--) {\r\n        state.breed2Rank[`rank${i}`] = state.breed2Rank[`rank${i - 1}`];\r\n      }\r\n\r\n      state.breed2Rank[`rank${endIndex + 1}`] = temp;\r\n\r\n    } else if (startColumn === 'Breed 2') { // in case drag from breed 2 table and drop to breed 1 table\r\n      state.breed2Total--;\r\n      const temp = state.breed2Rank[`rank${startIndex + 1}`];\r\n\r\n      for (let i = startIndex + 1; i <= state.breed2Total; i++) {\r\n        state.breed2Rank[`rank${i}`] = state.breed2Rank[`rank${i + 1}`]\r\n      }\r\n\r\n      delete state.breed2Rank[`rank${state.breed2Total + 1}`]\r\n\r\n      state.breed1Total++;\r\n\r\n      for (let i = state.breed1Total; i > endIndex + 1; i--) {\r\n        state.breed1Rank[`rank${i}`] = state.breed1Rank[`rank${i - 1}`];\r\n      }\r\n\r\n      state.breed1Rank[`rank${endIndex + 1}`] = temp;\r\n    }\r\n  }\r\n\r\n  return state;\r\n}","import createRank from \"../helpers/createRank\";\r\nimport reorderData from \"../helpers/reorderData\";\r\n\r\n/* State that controlled by redux */\r\nconst initialState = {\r\n  breed1Total: 0,\r\n  breed1Rank: {},\r\n  breed2Total: 0,\r\n  breed2Rank: {}\r\n}\r\n\r\n/* Action types */\r\nconst SET_INITIAL_RANK = 'SET_INITIAL_RANK';\r\nconst DRAG_AND_DROP = 'DRAG_AND_DROP';\r\n\r\n/* Action function definitions */\r\nexport const setInitialRank = (data) => ({ type: SET_INITIAL_RANK, payload: data })\r\n\r\nexport const dragAndDrop = (order) => ({ type: DRAG_AND_DROP, payload: order })\r\n\r\n/* Reducer */\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_INITIAL_RANK:\r\n      const { rank1, rank2 } = createRank(action.payload)\r\n      return {\r\n        ...state,\r\n        breed1Total: 10,\r\n        breed1Rank: rank1,\r\n        breed2Total: 10,\r\n        breed2Rank: rank2\r\n      }\r\n    case DRAG_AND_DROP:\r\n      const { startIndex, startColumn, endIndex, endColumn } = action.payload;\r\n      const newState = reorderData(state, startIndex, startColumn, endIndex, endColumn);\r\n      return {\r\n        ...state,\r\n        breed1Total: newState.breed1Total,\r\n        breed1Rank: newState.breed1Rank,\r\n        breed2Total: newState.breed2Total,\r\n        breed2Rank: newState.breed2Rank\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","// convert object data to array which contains rank number and breed name\r\nexport default function makeData(data) {\r\n  return Object.values(data).map((breed, i) => {\r\n    return {\r\n      rank: i + 1,\r\n      breed\r\n    }\r\n  })\r\n}","import React from 'react';\r\nimport { useTable } from 'react-table';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\n// Table component which contains rank number and breed name\r\nfunction RankTable({ columns, data }) {\r\n\r\n  const table = useTable({\r\n    columns,\r\n    data\r\n  });\r\n  const { getTableProps, headerGroups, prepareRow, rows } = table;\r\n\r\n  return (\r\n    <>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <Droppable droppableId={columns[1].Header} >\r\n          {(provided, snapshot) => (\r\n            <tbody ref={provided.innerRef} {...provided.droppableProps} >\r\n              {rows.map((row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <Draggable\r\n                    draggableId={row.original.breed}\r\n                    key={row.original.breed}\r\n                    index={row.index}\r\n                  >\r\n                    {(provided, snapshot) => (\r\n                      <tr\r\n                        {...row.getRowProps()}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}\r\n                      >\r\n                        {row.cells.map(cell => (\r\n                          <td {...cell.getCellProps()}>\r\n                            {cell.render('Cell')}\r\n                          </td>\r\n                        ))}\r\n                      </tr>\r\n                    )}\r\n                  </Draggable>\r\n                )\r\n              })}\r\n              {provided.placeholder}\r\n            </tbody>\r\n          )}\r\n        </Droppable>\r\n      </table>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RankTable\r\n","import React, { useState, useMemo } from 'react'\r\nimport styled from 'styled-components';\r\nimport makeData from '../helpers/makeData'\r\nimport RankTable from './RankTable'\r\nimport { useDispatch } from 'react-redux';\r\nimport { dragAndDrop } from '../reducers';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  table {\r\n    border-spacing: 0;\r\n    border: 1px solid black;\r\n    margin: 0 100px;\r\n    height: 100%;\r\n    width: 250px;\r\n\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 0.5rem;\r\n      border-bottom: 1px solid black;\r\n      border-right: 1px solid black;\r\n      text-align: center;\r\n      width: 40px;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n        width: 210px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n\r\n    table {\r\n      margin-bottom: 50px;\r\n    }\r\n  }\r\n`;\r\n\r\n// MainContent contains two tables(breed 1 rank, breed 2 rank)\r\nfunction MainContent({ state }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const columnsOne = useMemo(() =>\r\n    [\r\n      {\r\n        Header: \"Rank\",\r\n        accessor: 'rank'\r\n      },\r\n      {\r\n        Header: 'Breed 1',\r\n        accessor: 'breed'\r\n      }\r\n    ]\r\n  )\r\n  const columnsTwo = useMemo(() =>\r\n    [\r\n      {\r\n        Header: \"Rank\",\r\n        accessor: 'rank'\r\n      },\r\n      {\r\n        Header: 'Breed 2',\r\n        accessor: 'breed'\r\n      }\r\n    ],\r\n    []\r\n  )\r\n  const [dataOne, setDataOne] = useState(makeData(state.breed1Rank))\r\n  const [dataTwo, setDataTwo] = useState(makeData(state.breed2Rank))\r\n\r\n  // execute when drag and drop is over\r\n  const handleDragEnd = result => {\r\n    const { source, destination } = result;\r\n\r\n    // if user drop in not droppable area\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    const startIndex = source.index;\r\n    const startColumn = source.droppableId;\r\n    const endIndex = destination.index;\r\n    const endColumn = destination.droppableId;\r\n\r\n    // each table needs at least one row and maximum 19 rows\r\n    if (startColumn === 'Breed 1' && startColumn !== endColumn) {\r\n      if (Object.keys(state.breed1Rank).length === 1) {\r\n        alert(\"Woof Invalid Action Woof\");\r\n        return;\r\n      }\r\n    } else if (startColumn === 'Breed 2' && startColumn !== endColumn) {\r\n      if (Object.keys(state.breed2Rank).length === 1) {\r\n        alert(\"Woof Invalid Action Woof\");\r\n        return;\r\n      }\r\n    }\r\n    dispatch(dragAndDrop({ startIndex, startColumn, endIndex, endColumn }))\r\n\r\n    setDataOne(makeData(state.breed1Rank));\r\n    setDataTwo(makeData(state.breed2Rank));\r\n  }\r\n\r\n  return (\r\n    <Styles>\r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        <RankTable columns={columnsOne} data={dataOne} />\r\n        <RankTable columns={columnsTwo} data={dataTwo} />\r\n      </DragDropContext>\r\n    </Styles>\r\n  )\r\n}\r\n\r\nexport default MainContent\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  position: absolute;\r\n  top: 60px;\r\n  right: -100px;\r\n`;\r\n\r\n// export button exports the json file of breed data and shows it in blank tab of the browser\r\nfunction ExportButton({ state }) {\r\n\r\n  const handleClick = () => {\r\n    const dataStr = `data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify({ \"dogBreeds\": state }, null, '\\t'))}`\r\n    const link = document.createElement('a');\r\n    link.href = dataStr;\r\n    link.download = \"breed.json\";\r\n    link.click();\r\n\r\n    const x = window.open();\r\n    x.document.open();\r\n    x.document.write('<html><body><pre>' + JSON.stringify({ \"dogBreeds\": state }, null, '\\t') + '</pre></body></html>');\r\n    x.document.close();\r\n  }\r\n\r\n  return (\r\n    <Button onClick={handleClick}>\r\n      Export!\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ExportButton\r\n","// package\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\n\n// custom hook\nimport useApplicationData from './hooks/useApplicationData';\n\n// components\nimport MainContent from './components/MainContent';\nimport ExportButton from './components/ExportButton';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst HeaderContainer = styled.div`\n  position: relative;\n`;\n\nconst Header = styled.div`\n  margin: 50px 0;\n  font-weight: 700;\n  font-size: 2rem;\n`;\n\nfunction App() {\n\n  const { data, loading, error } = useApplicationData()\n\n  const state = useSelector(state => ({\n    breed1Total: state.breed1Total,\n    breed1Rank: state.breed1Rank,\n    breed2Total: state.breed2Total,\n    breed2Rank: state.breed2Rank\n  }))\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error!</div>;\n  if (!data) return null;\n\n  return (\n    <Container>\n      <HeaderContainer>\n        <Header>Breed Rank</Header>\n        <ExportButton state={state} />\n      </HeaderContainer>\n      <MainContent state={state} />\n    </Container>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { setInitialRank } from \"../reducers\";\r\nimport axios from \"axios\";\r\n\r\nexport default function useApplicationData() {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // fetch api from the link when the component is mounted\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      try {\r\n        setError(null);\r\n        setData(null);\r\n        setLoading(true);\r\n\r\n        const response = await axios.get('https://dog.ceo/api/breeds/list/all');\r\n\r\n        setData(response.data);\r\n        dispatch(setInitialRank(response.data.message))\r\n      } catch (e) {\r\n        setError(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [])\r\n\r\n  return {\r\n    data,\r\n    loading,\r\n    error\r\n  };\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux';\nimport reducer from './reducers'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}